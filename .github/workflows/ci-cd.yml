name: "CI/CD — EC2 → ECR → EKS"

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: google-store
  CLUSTER_NAME: my-eks-cluster
  DEPLOYMENT_FILE: kubernetes/deployment.yml
  EC2_USER: ec2-user
  EC2_HOST: <YOUR_EC2_PUBLIC_IP>

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Connect to EC2 and build/push Docker
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd ~/app
            # Install Docker if missing
            sudo yum install -y docker || true
            sudo service docker start
            # AWS CLI already configured on EC2
            IMAGE_TAG=$(date +%Y%m%d%H%M%S)
            IMAGE_URI=$(aws ecr describe-repositories --repository-names $ECR_REPOSITORY >/dev/null 2>&1 || aws ecr create-repository --repository-name $ECR_REPOSITORY; echo $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG)
            docker build -t $IMAGE_URI .
            docker push $IMAGE_URI
            echo $IMAGE_URI > ~/image_uri.txt

      - name: Update deployment.yml in Git
        run: |
          IMAGE_URI=$(ssh -i <path-to-key> ec2-user@${{ env.EC2_HOST }} 'cat ~/image_uri.txt')
          sed -i "s#image: .*#image: $IMAGE_URI#g" ${{ env.DEPLOYMENT_FILE }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@github.com"
          git add ${{ env.DEPLOYMENT_FILE }}
          git commit -m "Update image: $IMAGE_URI" || echo "No changes"
          git push

      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
          kubectl apply -f kubernetes/deployment.yml
          kubectl apply -f kubernetes/service.yml
