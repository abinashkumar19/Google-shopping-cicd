name: CI/CD to EC2 + ECR + Kubernetes

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ca-central-1
  ECR_REPOSITORY: google-shopping
  EC2_USER: ec2-user

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔑 Decode and save SSH key
        run: |
          echo "${{ secrets.EC2_PEM_B64 }}" | base64 -d > ec2-key.pem
          chmod 600 ec2-key.pem

      - name: 🐳 Build & Push Docker image to ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)
          IMAGE_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

          echo "🧩 Image URI: $IMAGE_URI"

          aws ecr describe-repositories --repository-names $ECR_REPOSITORY || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY

          docker build -t $IMAGE_URI .
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
          docker push $IMAGE_URI

          echo $IMAGE_URI > image_uri.txt

      - name: 🚀 Deploy to EC2 and Apply Kubernetes
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "📤 Copying image URI file to EC2..."
          scp -i ec2-key.pem -o StrictHostKeyChecking=no image_uri.txt $EC2_USER@$EC2_HOST:/home/ec2-user/

          echo "💻 Connecting to EC2..."
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << "EOF"
            set -e
            echo "✅ Connected to EC2 instance"

            IMAGE_URI=$(cat /home/ec2-user/image_uri.txt)
            echo "🖼  Using image: $IMAGE_URI"

            APP_DIR="/home/ec2-user/app"
            DEPLOY_DIR="$APP_DIR/k8s"
            mkdir -p $APP_DIR

            # Clone or pull repository
            if [ ! -d "$APP_DIR/.git" ]; then
              echo "📦 Cloning application repository..."
              git clone https://github.com/abinashkumar19/Google-shopping-cicd.git $APP_DIR
            else
              echo "🔄 Pulling latest changes..."
              cd $APP_DIR && git reset --hard && git clean -fd && git pull origin main
            fi

            cd $DEPLOY_DIR

            # Update images in all deployments
            echo "📝 Updating images in all deployment YAMLs..."
            for deploy_file in *-deployment.yml; do
              sed -i "s|image: .*|image: ${IMAGE_URI}|g" $deploy_file
            done

            echo "⚙️ Configuring kubectl for EKS..."
            aws eks update-kubeconfig --region ca-central-1 --name kube

            echo "⚙️ Applying all Kubernetes manifests..."
            for yaml_file in *-deployment.yml *-service.yml *-hpa.yml; do
              kubectl apply -f $yaml_file || echo "⚠️ Failed to apply $yaml_file"
            done

            echo "🚀 Deployment completed successfully!"
EOF
