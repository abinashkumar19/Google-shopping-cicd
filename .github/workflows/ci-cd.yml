name: CI/CD — EC2 → ECR → EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPOSITORY: google-store
      CLUSTER_NAME: my-eks-cluster
      DEPLOYMENT_FILE: kubernetes/deployment.yml
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_HOST: ${{ secrets.EC2_HOST }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: SSH into EC2 and Build Docker Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "✅ Connected to EC2"
            sudo yum install -y docker awscli || true
            sudo service docker start

            REPO_NAME=${{ env.ECR_REPOSITORY }}
            REGION=${{ env.AWS_REGION }}
            ACCOUNT=${{ env.AWS_ACCOUNT_ID }}
            IMAGE_TAG=$(date +%Y%m%d%H%M%S)
            IMAGE_URI=$ACCOUNT.dkr.ecr.$REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG

            # Create ECR repo if missing
            aws ecr describe-repositories --repository-names $REPO_NAME --region $REGION >/dev/null 2>&1 || \
              aws ecr create-repository --repository-name $REPO_NAME --region $REGION

            # Login to ECR
            aws ecr get-login-password --region $REGION | sudo docker login --username AWS --password-stdin $ACCOUNT.dkr.ecr.$REGION.amazonaws.com

            cd ~/app || mkdir ~/app && cd ~/app
            rm -rf *
            git clone https://github.com/${{ github.repository }} .
            cd app
            sudo docker build -t $IMAGE_URI .
            sudo docker push $IMAGE_URI
            echo $IMAGE_URI > ~/image_uri.txt
            echo "✅ Image pushed: $IMAGE_URI"

      - name: Get New Image URI and Update deployment.yml
        run: |
          IMAGE_URI=$(ssh -i <(echo "${{ secrets.EC2_PRIVATE_KEY }}") -o StrictHostKeyChecking=no ${{ env.EC2_USER }}@${{ env.EC2_HOST }} 'cat ~/image_uri.txt')
          echo "🖼️ Using image: $IMAGE_URI"
          sed -i "s|image: .*|image: $IMAGE_URI|g" ${{ env.DEPLOYMENT_FILE }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@github.com"
          git add ${{ env.DEPLOYMENT_FILE }}
          git commit -m "🔄 Updated image to $IMAGE_URI" || echo "No changes to commit"
          git push

      - name: Deploy to EKS
        run: |
          aws configure set region ${{ env.AWS_REGION }}
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}
          kubectl apply -f kubernetes/deployment.yml
          kubectl apply -f kubernetes/service.yml
          
