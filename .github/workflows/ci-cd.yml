name: CI-CD Pipeline

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-south-1
  AWS_ACCOUNT_ID: 123456789012
  ECR_REPOSITORY: google-shopping-repo
  EC2_USER: ec2-user
  EC2_HOST: ec2-xx-xx-xx-xx.ap-south-1.compute.amazonaws.com
  CLUSTER_NAME: abinash-cluster
  DEPLOYMENT_FILE: k8s/deployment.yml

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout Code
        uses: actions/checkout@v4

      - name: üîë Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
          chmod 600 ec2-key.pem

      - name: üöÄ Build and Push Docker Image on EC2
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no ${{ env.EC2_USER }}@${{ env.EC2_HOST }} << 'EOF'
            set -e
            sudo yum install -y docker awscli git || true
            sudo service docker start

            ACCOUNT_ID=${{ env.AWS_ACCOUNT_ID }}
            REGION=${{ env.AWS_REGION }}
            REPO=${{ env.ECR_REPOSITORY }}
            IMAGE_TAG=$(date +%Y%m%d%H%M%S)
            IMAGE_URI=$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO:$IMAGE_TAG

            aws ecr describe-repositories --repository-names $REPO --region $REGION >/dev/null 2>&1 || \
              aws ecr create-repository --repository-name $REPO --region $REGION

            aws ecr get-login-password --region $REGION | sudo docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

            BUILD_DIR="/tmp/build-$IMAGE_TAG"
            mkdir -p $BUILD_DIR
            cd $BUILD_DIR
            git clone https://github.com/${{ github.repository }} .
            sudo docker build -t $IMAGE_URI .
            sudo docker push $IMAGE_URI

            echo $IMAGE_URI > ~/image_uri.txt
            rm -rf $BUILD_DIR
          EOF

      - name: üîÑ Fetch new ECR Image URI
        run: |
          IMAGE_URI=$(ssh -i ec2-key.pem -o StrictHostKeyChecking=no ${{ env.EC2_USER }}@${{ env.EC2_HOST }} "cat ~/image_uri.txt")
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: üß© Update Deployment YAML
        run: |
          sed -i "s|<ECR_IMAGE_URI>|${{ env.IMAGE_URI }}|g" ${{ env.DEPLOYMENT_FILE }}
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ${{ env.DEPLOYMENT_FILE }}
          git commit -m "üîÑ Update image to ${{ env.IMAGE_URI }}" || echo "No changes to commit"
          git push

      - name: ‚ò∏Ô∏è Apply on Kubernetes (via EC2)
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no ${{ env.EC2_USER }}@${{ env.EC2_HOST }} << 'EOF'
            aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
            kubectl apply -f ~/Google-shopping-cicd/k8s/deployment.yml
            kubectl apply -f ~/Google-shopping-cicd/k8s/service.yml
          EOF
