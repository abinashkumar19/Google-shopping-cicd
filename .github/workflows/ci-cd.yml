name: CI/CD to EC2 + ECR + Kubernetes

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ca-central-1
  ECR_REPOSITORY: google-shopping
  EC2_USER: ec2-user

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔑 Decode and save SSH key
        run: |
          echo "${{ secrets.EC2_PEM_B64 }}" | base64 -d > ec2-key.pem
          chmod 600 ec2-key.pem

      - name: 🐳 Build & Push Docker image to ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)
          IMAGE_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

          echo "🧩 Image URI: $IMAGE_URI"

          aws ecr describe-repositories --repository-names $ECR_REPOSITORY || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY

          docker build -t $IMAGE_URI .
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
          docker push $IMAGE_URI

          echo $IMAGE_URI > image_uri.txt

      - name: 🔄 Update deployment YAMLs in Git and push
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_PAT }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          echo "📝 Updating images in all deployment YAMLs..."
          for deploy_file in k8s/*-deployment.yml; do
            [ -f "$deploy_file" ] && sed -i "s|image: .*|image: ${IMAGE_URI}|g" "$deploy_file"
          done

          echo "💾 Committing updated deployment YAMLs..."
          git add k8s/*-deployment.yml
          git commit -m "Update Docker image to $IMAGE_URI [ci skip]" || echo "No changes to commit"
          git push https://$GITHUB_PAT@github.com/abinashkumar19/Google-shopping-cicd.git HEAD:main

      - name: 🚀 Deploy to EC2 and Apply Kubernetes
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "📤 Copying image URI file to EC2..."
          scp -i ec2-key.pem -o StrictHostKeyChecking=no image_uri.txt $EC2_USER@$EC2_HOST:/home/ec2-user/

          echo "💻 Connecting to EC2..."
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
            set -e
            echo "✅ Connected to EC2 instance"

            IMAGE_URI=\$(cat /home/ec2-user/image_uri.txt)
            echo "🖼 Using image: \$IMAGE_URI"

            APP_DIR="/home/ec2-user/app"
            mkdir -p \$APP_DIR

            if [ ! -d "\$APP_DIR/.git" ]; then
              echo "📦 Cloning application repository..."
              git clone https://$GITHUB_PAT@github.com/abinashkumar19/Google-shopping-cicd.git \$APP_DIR
            else
              echo "🔄 Resetting local repo to match remote..."
              cd \$APP_DIR
              git fetch origin
              git reset --hard origin/main
              git clean -fd
            fi

            cd \$APP_DIR

            echo "⚙️ Configuring kubectl for EKS..."
            aws eks update-kubeconfig --region ca-central-1 --name kube

            echo "⚙️ Applying Kubernetes manifests..."
            for deploy_file in k8s/*-deployment.yml; do
              [ -f "\$deploy_file" ] && kubectl apply -f "\$deploy_file"
            done

            for svc_file in k8s/*-service.yml; do
              [ -f "\$svc_file" ] && kubectl apply -f "\$svc_file"
            done

            for hpa_file in k8s/*-hpa.yml; do
              [ -f "\$hpa_file" ] && kubectl apply -f "\$hpa_file"
            done

            echo "🚀 Deployment completed successfully!"
          EOF
